{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "This is a simple API",
    "version" : "1.0.1-oas3",
    "title" : "Component Inventory API",
    "contact" : {
      "email" : "you@boehringer-ingelheim.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "developers",
    "description" : "Operations available to regular developers"
  } ],
  "paths" : {
    "/authenticate" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Get access to user",
        "description" : "As user, I want to have access",
        "operationId" : "authenticateUser",
        "requestBody" : {
          "description" : "",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : { }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AuthenticateRespond"
          }
        }
      }
    },
    "/workspaces" : {
      "get" : {
        "tags" : [ ],
        "summary" : "As user, I want to see my workspaces",
        "description" : "As user, I want to see my workspaces",
        "operationId" : "getWorkspaces",
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WorkspaceHeaderResponse"
                  },
                  "example" : [ {
                    "id" : "d290f1ee-6c54-4b01-90e6-d701748f0851",
                    "name" : "RStudio"
                  }, {
                    "id" : "d290f1ee-6c54-4b01-90e6-d701748f0852",
                    "name" : "RStudio1"
                  }, {
                    "id" : "d290f1ee-6c54-4b01-90e6-d701748f0853",
                    "name" : "RStudio2"
                  }, {
                    "id" : "d290f1ee-6c54-4b01-90e6-d701748f0854",
                    "name" : "RStudio3"
                  }, {
                    "id" : "d290f1ee-6c54-4b01-90e6-d701748f0855",
                    "name" : "RStudio4"
                  }, {
                    "id" : "d290f1ee-6c54-4b01-90e6-d701748f0856",
                    "name" : "RStudio5"
                  }, {
                    "id" : "d290f1ee-6c54-4b01-90e6-d701748f0857",
                    "name" : "RStudio6"
                  }, {
                    "id" : "d290f1ee-6c54-4b01-90e6-d701748f0858",
                    "name" : "Informatica"
                  } ]
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        }
      }
    },
    "/workspaces/{workspaceId}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "As user, I want to see details of my workspace",
        "description" : "As user, I want to see all information for my workspace",
        "operationId" : "getWorkspace",
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "description" : "ID of workspace",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation is getting detail of the workspace",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkspaceDetailResponse"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/components" : {
      "get" : {
        "tags" : [ ],
        "summary" : "As user, I want to see components in the workspace",
        "description" : "As user, I want to see components in the workspace",
        "operationId" : "getComponentList",
        "parameters" : [ {
          "in" : "path",
          "name" : "workspaceId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria. Array of components with their status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "Array of Component instances",
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ComponentInstanceHeaderResponse"
                  },
                  "example" : [ {
                    "id" : "09cca60c-c62b-4b8d-9a30-23ec8522374c",
                    "name" : "The Heart Is a Lonely Hunter",
                    "environments" : [ {
                      "environment" : "QA",
                      "status" : "FAILED"
                    }, {
                      "environment" : "PROD",
                      "status" : "FAILED"
                    }, {
                      "environment" : "DEV",
                      "status" : "FAILED"
                    } ]
                  }, {
                    "id" : "64cd947a-ad3c-483c-ac65-ca849218c9f4",
                    "name" : "A Farewell to Arms",
                    "environments" : [ {
                      "environment" : "DEV",
                      "status" : "FAILED"
                    } ]
                  }, {
                    "id" : "4be9ef8a-8433-4f1e-9d8a-c4c702263870",
                    "name" : "Look Homeward, Angel",
                    "environments" : [ {
                      "environment" : "QA",
                      "status" : "READY"
                    }, {
                      "environment" : "DEV",
                      "status" : "READY"
                    }, {
                      "environment" : "PROD",
                      "status" : "RUNNING"
                    } ]
                  }, {
                    "id" : "5e1c529e-1042-4c60-8253-ce08770615c2",
                    "name" : "Nine Coaches Waiting",
                    "environments" : [ {
                      "environment" : "QA",
                      "status" : "RUNNING"
                    } ]
                  }, {
                    "id" : "8560638f-e01d-48d2-846b-fbaa3e5d1864",
                    "name" : "In a Glass Darkly",
                    "environments" : [ {
                      "environment" : "QA",
                      "status" : "FAILED"
                    } ]
                  } ]
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "tags" : [ ],
        "summary" : "Add component to workspace",
        "description" : "As user, I want to add a new Component to the workspace",
        "operationId" : "addComponent",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "workspaceId",
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          }
        } ],
        "requestBody" : {
          "description" : "Component definition",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddComponentRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ComponentInstanceDetailRespond"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/components/{componentId}" : {
      "get" : {
        "tags" : [ ],
        "operationId" : "getComponentInstance",
        "summary" : "As user, I want to see component of workspace",
        "description" : "As user, I want to see component of workspace",
        "parameters" : [ {
          "in" : "path",
          "name" : "workspaceId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          }
        }, {
          "in" : "path",
          "name" : "componentId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ef-6c54-4b01-90e6-d701748f0851"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ComponentInstanceDetailRespond"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        }
      },
      "put" : {
        "tags" : [ ],
        "summary" : "Update a running component inside of all workspace's environments",
        "description" : "As user, I want to update components of all workspace's environments",
        "operationId" : "updateComponent",
        "parameters" : [ {
          "in" : "path",
          "name" : "workspaceId",
          "description" : "ID of workspace",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          }
        }, {
          "in" : "path",
          "name" : "componentId",
          "description" : "ID of component",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          }
        } ],
        "requestBody" : {
          "description" : "component",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateComponentInstanceRequest"
              }
            }
          }
        },
        "responses" : {
          "205" : {
            "$ref" : "#/components/responses/ResetContent"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "tags" : [ ],
        "summary" : "Delete component of workspace",
        "description" : "As user, I want to delete component of workspace",
        "operationId" : "deleteComponent",
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "description" : "ID of workspace that needs to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          }
        }, {
          "name" : "componentId",
          "in" : "path",
          "description" : "ID of component that needs to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          }
        } ],
        "responses" : {
          "202" : {
            "$ref" : "#/components/responses/ResetContent"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        }
      }
    },
    "/products" : {
      "get" : {
        "summary" : "show list of all products",
        "description" : "As user, I want to see the list of all products",
        "operationId" : "getProducts",
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductResponse"
                  },
                  "example" : [ {
                    "id" : "d290f1ee-6c54-4b01-90e6-d701748f0851",
                    "name" : "RStudio",
                    "description" : "Lorem Ipsum the fifth is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys",
                    "image" : "https://jupyter.org/assets/nav_logo.svg",
                    "location" : "EU"
                  }, {
                    "id" : "d290f1ee-6c54-4b01-90e6-d701748f0852",
                    "name" : "RStudio1",
                    "description" : "Lorem Ipsum the fifth is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys",
                    "image" : "https://jupyter.org/assets/nav_logo.svg",
                    "location" : "EU"
                  }, {
                    "id" : "d290f1ee-6c54-4b01-90e6-d701748f0853",
                    "name" : "RStudio2",
                    "description" : "Lorem Ipsum the fifth is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys",
                    "image" : "https://jupyter.org/assets/nav_logo.svg",
                    "location" : "EU"
                  }, {
                    "id" : "d290f1ee-6c54-4b01-90e6-d701748f0854",
                    "name" : "RStudio3",
                    "description" : "Lorem Ipsum the fifth is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys",
                    "image" : "https://jupyter.org/assets/nav_logo.svg",
                    "location" : "EU"
                  }, {
                    "id" : "d290f1ee-6c54-4b01-90e6-d701748f0855",
                    "name" : "RStudio4",
                    "description" : "Lorem Ipsum the fifth is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys",
                    "image" : "https://jupyter.org/assets/nav_logo.svg",
                    "location" : "EU"
                  } ]
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        }
      },
      "post" : {
        "summary" : "As user, I want to create product",
        "description" : "As user, I want to create product",
        "operationId" : "createProduct",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ProductRequestAddUpdate"
        },
        "responses" : {
          "200" : {
            "description" : "new product",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        }
      }
    },
    "/products/{productId}" : {
      "get" : {
        "summary" : "As user, I want to see detail of one product",
        "description" : "As user, I want to see detail of one product",
        "operationId" : "getProductDetail",
        "parameters" : [ {
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        }
      },
      "put" : {
        "summary" : "As user, I want to update the product",
        "description" : "As user, I want to update the product",
        "operationId" : "updateProductDetail",
        "parameters" : [ {
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ProductRequestAddUpdate"
        },
        "responses" : {
          "205" : {
            "$ref" : "#/components/responses/ResetContent"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        }
      },
      "delete" : {
        "summary" : "As user, I want to delete one product from the catalog",
        "description" : "As user, I want to delete one product from the catalog",
        "operationId" : "deleteProduct",
        "parameters" : [ {
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          }
        } ],
        "responses" : {
          "205" : {
            "$ref" : "#/components/responses/ResetContent"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        }
      }
    },
    "/products1" : {
      "get" : {
        "summary" : "show list of all products",
        "description" : "As user, I want to see the list of all products",
        "operationId" : "getProducts1",
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductRequest"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/ServerError"
          }
        }
      }
    }
  },
  "servers" : [ {
    "url" : "http://virtserver.swaggerhub.com/bi-edpi/component-inventory_api/1.0.1-oas3"
  }, {
    "url" : "https://virtserver.swaggerhub.com/bi-edpi/component-inventory_api/1.0.1-oas3"
  } ],
  "components" : {
    "securitySchemes" : {
      "ApiKeyAuth" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "Authorization"
      }
    },
    "requestBodies" : {
      "ProductRequestAddUpdate" : {
        "required" : true,
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ProductRequest"
            }
          }
        }
      }
    },
    "responses" : {
      "ComponentInstanceDetailRespond" : {
        "description" : "",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ComponentInstanceDetailResponse"
            }
          }
        }
      },
      "NotFound" : {
        "description" : "",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "BadRequest" : {
        "description" : "",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "Forbidden" : {
        "description" : "",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "ServerError" : {
        "description" : "",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "Conflict" : {
        "description" : "",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "ResetContent" : {
        "description" : "OK"
      },
      "AuthenticateRespond" : {
        "description" : "",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AuthenticateRespond"
            }
          }
        }
      }
    },
    "schemas" : {
      "WorkspaceHeaderResponse" : {
        "description" : "Limited information about workspace",
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "ID of workspace",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "name" : {
            "type" : "string",
            "description" : "Workspace name",
            "example" : "RStudio"
          }
        }
      },
      "WorkspaceDetailResponse" : {
        "description" : "Workspace",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "ID of Workspace",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "name" : {
            "type" : "string",
            "description" : "Workspace name",
            "example" : "RStudio"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "BI-LINUX", "BI-USER" ],
            "description" : "Active directory"
          },
          "CI" : {
            "type" : "string",
            "example" : "BI-AS-DATALAKE",
            "description" : "Configuration Item"
          }
        }
      },
      "AddComponentRequest" : {
        "description" : "Product with his Survey",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "ID of Product",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of product",
            "example" : "RStudio"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of RStudio",
            "example" : "Description RStudio"
          },
          "image" : {
            "type" : "string",
            "description" : "Path to the image",
            "example" : "/images/componentRStudio.gif"
          },
          "answers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnswerDTO"
            }
          }
        }
      },
      "ComponentInstanceHeaderResponse" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "ID of ComponentInstance",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "name" : {
            "type" : "string",
            "example" : "RStudio component"
          },
          "environments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvironmentDTO"
            }
          }
        }
      },
      "ComponentInstanceDetailResponse" : {
        "description" : "Object defining ComponentInstance",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "ID of ComponentInstance inside of workspace",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "name" : {
            "type" : "string",
            "description" : "Name ComponentInstance inside of workspace",
            "example" : "RStudio"
          },
          "componentInstances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentInstanceDTO"
            }
          }
        },
        "example" : {
          "id" : "6d5e2d66-d6ae-44be-8369-69435f709a72",
          "name" : "The Sun Also Rises",
          "componentInstances" : [ {
            "id" : "9804795e-c138-4d0f-a4ed-d568570b67a4",
            "environment" : "PROD",
            "status" : "READY",
            "metaDatas" : [ {
              "key" : "color",
              "value" : "yellow"
            }, {
              "key" : "url",
              "value" : "http://mybi"
            }, {
              "key" : "background",
              "value" : "red"
            } ],
            "answers" : [ {
              "variable" : "serverMemorySize",
              "value" : [ "100000" ]
            }, {
              "variable" : "cpuFrequency",
              "value" : [ "1.1", "6" ]
            }, {
              "variable" : "cpuCount",
              "value" : [ "9" ]
            } ]
          }, {
            "id" : "44d9f91d-02fb-4d41-a81a-68d1f7195c9f",
            "environment" : "DEV",
            "status" : "FAILED",
            "metaDatas" : [ {
              "key" : "color",
              "value" : "red"
            }, {
              "key" : "url",
              "value" : "http://google"
            }, {
              "key" : "background",
              "value" : "green"
            } ],
            "answers" : [ {
              "variable" : "serverMemorySize",
              "value" : [ "10000000", "50000000" ]
            }, {
              "variable" : "graphicCardMemory",
              "value" : [ "10000000", "50000000" ]
            }, {
              "variable" : "usingScanner",
              "value" : [ "true" ]
            } ]
          }, {
            "id" : "a24eba0b-cb78-41c9-bc02-e8dcd97a4884",
            "environment" : "QA",
            "status" : "READY",
            "metaDatas" : [ {
              "key" : "size",
              "value" : "20"
            }, {
              "key" : "background",
              "value" : "red"
            } ],
            "answers" : [ {
              "variable" : "timeInterval",
              "value" : [ "5", "120" ]
            }, {
              "variable" : "length",
              "value" : [ "120", "250" ]
            } ]
          } ]
        }
      },
      "UpdateComponentInstanceRequest" : {
        "description" : "Object defining ComponentInstance",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "ID of ComponentInstance inside of workspace",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "name" : {
            "type" : "string",
            "description" : "Name ComponentInstance inside of workspace",
            "example" : "RStudio"
          },
          "componentInstances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentInstanceDTO"
            }
          }
        }
      },
      "ProductResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "name" : {
            "type" : "string",
            "example" : "RStudio",
            "description" : "Name of the product"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the product",
            "example" : "Description of RStudio"
          },
          "image" : {
            "type" : "string",
            "description" : "Path to the image",
            "example" : "https://jupyter.org/assets/nav_logo.svg"
          },
          "location" : {
            "type" : "string",
            "description" : "Location of the product",
            "example" : "EU"
          },
          "questions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductQuestionDTO"
            }
          }
        }
      },
      "ProductRequest" : {
        "type" : "object",
        "description" : "Product Definition",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "RStudio"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of RStudio"
          },
          "image" : {
            "type" : "string",
            "description" : "Path to the image",
            "example" : "/images/componentRStudio.gif"
          },
          "questions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductQuestionDTO"
            }
          }
        }
      },
      "ErrorResponse" : { },
      "ProductQuestionDTO" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the Question",
            "example" : "Description"
          },
          "mandatory" : {
            "type" : "boolean",
            "description" : "Whether or not this Question should be filled up",
            "example" : true
          },
          "prompt" : {
            "type" : "string",
            "description" : "Prompt for question",
            "example" : "Prompt"
          },
          "variableName" : {
            "type" : "string",
            "description" : "Name of variable which would contain input defined by user",
            "example" : "var1"
          },
          "answerType" : {
            "$ref" : "#/components/schemas/ProductQuestionAnswerTypeDTO"
          }
        }
      },
      "ProductQuestionAnswerTypeDTO" : {
        "type" : "object",
        "properties" : {
          "inputType" : {
            "type" : "string",
            "enum" : [ "TEXT", "TEXT_AREA", "PASSWORD", "SINGLE_SELECT_LIST", "MULTIPLE_SELECT_LIST", "INTEGER", "FLOAT" ],
            "example" : "TEXT"
          },
          "answerClassType" : {
            "type" : "string",
            "enum" : [ "ChooseAnswerType", "MinMaxAnswerType", "WrittenSingleAnswerType" ],
            "example" : "WrittenSingleAnswerType"
          },
          "defaultAnswer" : {
            "type" : "array",
            "description" : "Multiple default answers or Just one",
            "items" : {
              "type" : "string"
            },
            "example" : [ "var1", "var2" ]
          },
          "options" : {
            "description" : "All possible options",
            "type" : "array",
            "items" : {
              "description" : "One from many Answers",
              "type" : "string",
              "example" : "Option1"
            }
          },
          "minimum" : {
            "type" : "string",
            "description" : "Minimum value",
            "example" : "1"
          },
          "maximum" : {
            "type" : "string",
            "description" : "Maximum value",
            "example" : "50"
          }
        }
      },
      "EnvironmentsTypeDTO" : {
        "type" : "string",
        "enum" : [ "DEV", "QA", "PROD" ],
        "example" : "DEV"
      },
      "EnvironmentsStatusDTO" : {
        "type" : "string",
        "enum" : [ "READY", "RUNNING", "FAILED" ],
        "example" : "READY"
      },
      "AnswerDTO" : {
        "properties" : {
          "variable" : {
            "type" : "string",
            "description" : "variable name",
            "example" : "var1"
          },
          "value" : {
            "type" : "array",
            "items" : {
              "description" : "One from many Answers",
              "type" : "string",
              "example" : "Option1"
            }
          }
        }
      },
      "MetaDataDTO" : {
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "Metadata key's name",
            "example" : "Metadata key"
          },
          "value" : {
            "type" : "string",
            "description" : "Metadata key's value",
            "example" : "Metadata value"
          }
        }
      },
      "ComponentInstanceDTO" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "ID of ComponentInstance inside of workspace's environment",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "environment" : {
            "$ref" : "#/components/schemas/EnvironmentsTypeDTO"
          },
          "status" : {
            "$ref" : "#/components/schemas/EnvironmentsStatusDTO"
          },
          "metaDatas" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MetaDataDTO"
            }
          },
          "answers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnswerDTO"
            }
          }
        }
      },
      "EnvironmentDTO" : {
        "properties" : {
          "environment" : {
            "$ref" : "#/components/schemas/EnvironmentsTypeDTO"
          },
          "status" : {
            "$ref" : "#/components/schemas/EnvironmentsStatusDTO"
          }
        }
      },
      "AuthenticateRespond" : {
        "properties" : {
          "token" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "11f5cce3-6c15-4c68-841c-e9c40c6c3423"
          }
        }
      }
    }
  },
  "security" : [ {
    "ApiKeyAuth" : [ ]
  } ]
}